// Mocks generated by Mockito 5.4.4 from annotations
// in core/test/repository/package_info_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// Package imports:
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:package_info_plus/package_info_plus.dart' as _i2;

// Project imports:
import 'package:core/data/package_info_manager.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PackageInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackageInfo extends _i1.Mock implements _i2.PackageInfo {
  @override
  String get appName => (super.noSuchMethod(
        Invocation.getter(#appName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#appName),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#appName),
        ),
      ) as String);

  @override
  String get packageName => (super.noSuchMethod(
        Invocation.getter(#packageName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#packageName),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#packageName),
        ),
      ) as String);

  @override
  String get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
      ) as String);

  @override
  String get buildNumber => (super.noSuchMethod(
        Invocation.getter(#buildNumber),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#buildNumber),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#buildNumber),
        ),
      ) as String);

  @override
  String get buildSignature => (super.noSuchMethod(
        Invocation.getter(#buildSignature),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#buildSignature),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#buildSignature),
        ),
      ) as String);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [PackageInfoManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackageInfoManager extends _i1.Mock
    implements _i4.PackageInfoManager {
  @override
  String get appName => (super.noSuchMethod(
        Invocation.getter(#appName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#appName),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#appName),
        ),
      ) as String);

  @override
  String get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
      ) as String);

  @override
  String get versionCode => (super.noSuchMethod(
        Invocation.getter(#versionCode),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#versionCode),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#versionCode),
        ),
      ) as String);

  @override
  String get packageName => (super.noSuchMethod(
        Invocation.getter(#packageName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#packageName),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#packageName),
        ),
      ) as String);

  @override
  String get buildSignature => (super.noSuchMethod(
        Invocation.getter(#buildSignature),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#buildSignature),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#buildSignature),
        ),
      ) as String);
}
